<UserControl x:Class="ThimbleweedParkExplorer.DinkPatch.DinkPatchedFunction"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ThimbleweedParkExplorer.DinkPatch"
             mc:Ignorable="d" Loaded="UserControl_Loaded"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <!-- Colors -->
        <Brush x:Key="MiddleSplitterColor">LightGray</Brush>
        <Brush x:Key="CommentColor">#FF229C87</Brush>
        <Brush x:Key="ModifiedInstructionColor">red</Brush>
        <Brush x:Key="AddedColor">#FF15AF00</Brush>
        <Brush x:Key="MouseOverColor">#d0f5ef</Brush>
        <Brush x:Key="HighlightedColor">#89fae7</Brush>
        <Brush x:Key="WindowBackgroundColor">white</Brush>
        <Brush x:Key="PanelBorderColor">LightGray</Brush>
        <Brush x:Key="TypeMarkerColor">#FF229C87</Brush>
        <!-- Styles -->
        <Style TargetType="Border" x:Key="panelBorder">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PanelBorderColor}"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="panelHeader">
            <Setter Property="Foreground" Value="{DynamicResource PanelBorderColor}"/>
            <Setter Property="Background" Value="{DynamicResource WindowBackgroundColor}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="14,-14,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Padding" Value="2,0"/>
        </Style>
        <Style TargetType="Border" x:Key="itemBorder">
            <Setter Property="Margin" Value="5,1"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True" >
                    <Setter Property="BorderBrush" Value="{DynamicResource MouseOverColor}" />
                </Trigger>
                <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource HighlightedColor}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock" x:Key="commentStyle">
            <Setter Property="Foreground" Value="{DynamicResource CommentColor}"/>
            <Setter Property="FontFamily" Value="Courier New"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Light"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="keyTextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="right"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
        </Style>
        <Style TargetType="TextBox" x:Key="valueTextBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="2"/>
        </Style>
        <!-- Converters -->
        <local:BoolToVisibility x:Key="hideIfFalse"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="5,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Grid.ColumnSpan="2" FontSize="16" FontWeight="DemiBold" Name="FunctionName">Function and script name goes here!</TextBlock>
            <TextBlock Grid.Row="1" Style="{DynamicResource keyTextBlock}">Remarks:</TextBlock>
            <TextBox Grid.Row="1" Style="{DynamicResource valueTextBox}" Grid.Column="1" Name="Comment"/>
            <Button Grid.Row="2" Margin="2" Click="AutoComment" ToolTip="Try to reconstruct the function calls in pseudo-code. (overwrites in-line comments)">Auto-comment</Button>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <GridSplitter Grid.Column="1" Width="5" Background="{DynamicResource MiddleSplitterColor}" ResizeBehavior="PreviousAndNext"/>
            <Grid Grid.Column="0">
                <Border Style="{DynamicResource panelBorder}" >
                    <Grid>
                        <TextBlock Style="{DynamicResource panelHeader}" >instructions</TextBlock>
                        <Grid Margin="0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ItemsControl Grid.Column="0" ItemsSource="{Binding instructions}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="1"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid >
                                            <Grid.Style>
                                                <Style TargetType="Grid">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HasPreComment}" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource CommentColor}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HasLineComment}" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource CommentColor}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsModified}" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource ModifiedInstructionColor}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding wasAdded}" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource AddedColor}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                                            <Setter Property="Background" Value="#89fae7"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Grid.Style>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <Grid Grid.Column="0" Name="ScrollIndicator_parent">
                                <Grid Background="#30000000" VerticalAlignment="top" Name="ScrollIndicator_marker">
                                    <Thumb Opacity="0" DragDelta="ScrollMarker_DragDelta"/>
                                </Grid>
                            </Grid>
                            <ScrollViewer ScrollChanged="Instructions_scroller_ScrollChanged" SizeChanged="Instructions_scroller_SizeChanged" Grid.Column="1" Margin="0,10" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Name="instructions_scroller">
                                <ItemsControl Name="Instructions" BorderThickness="0" ItemsSource="{Binding instructions}" HorizontalContentAlignment="Stretch">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Grid Height="6" Background="Transparent" MouseDown="InsertInstruction">
                                                    <Grid Grid.Row="0" >
                                                        <Grid.Style>
                                                            <Style TargetType="Grid">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}}" Value="True">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Grid.Style>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="0" Foreground="{DynamicResource CommentColor}" VerticalAlignment="Center" FontWeight="DemiBold" FontSize="14" Margin="4,-6,2,0">add +</TextBlock>
                                                        <Grid Height="2" Grid.Column="1" VerticalAlignment="Top" Margin="0,2,0,0" Background="{DynamicResource CommentColor}"/>
                                                    </Grid>
                                                </Grid>
                                                <Border Grid.Row="1" Style="{DynamicResource itemBorder}" Margin="5,0" MouseEnter="MouseEnterInstruction" MouseLeave="MouseLeaveInstruction" Tag="{Binding}">
                                                    <Border.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="Edit Comments" Command="{Binding Parent.PlacementTarget.Tag.EditCommentsCommand, RelativeSource={RelativeSource Self}}"/>
                                                        </ContextMenu>
                                                    </Border.ContextMenu>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="auto"/>
                                                            <RowDefinition Height="auto"/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <TextBlock Grid.Row="1" Visibility="{Binding HasPreComment, Converter={StaticResource hideIfFalse}}" Text="{Binding PreComment}" Style="{DynamicResource commentStyle}" Margin="20,0,0,0"/>
                                                        <Grid Grid.Row="2">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="20"/>
                                                                <ColumnDefinition Width="40"/>
                                                                <ColumnDefinition Width="auto"/>
                                                                <ColumnDefinition Width="auto"/>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition Width="auto"/>
                                                                <ColumnDefinition Width="auto"/>
                                                                <ColumnDefinition Width="auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Grid.Column="4" Visibility="{Binding HasLineComment, Converter={StaticResource hideIfFalse}}" Text="{Binding LineComment}" Style="{DynamicResource commentStyle}" TextTrimming="CharacterEllipsis"/>
                                                            <TextBlock Grid.Column="0" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource AddedColor}" Visibility="{Binding wasAdded, Converter={StaticResource hideIfFalse}}">+</TextBlock>
                                                            <TextBlock Grid.Column="1" FontSize="14" FontWeight="Light" VerticalAlignment="Center" HorizontalAlignment="Right" FontFamily="Courier New"><Run Text="{Binding InstructionIndex}" />:</TextBlock>
                                                            <TextBlock Grid.Column="2" FontSize="14" Margin="10,0" VerticalAlignment="Center" Text="{Binding originalInstructionString}" FontFamily="Courier New">
                                                                <TextBlock.Style>
                                                                    <Style TargetType="TextBlock">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsModified}" Value="True">
                                                                                <Setter Property="TextDecorations" Value="Strikethrough"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding wasAdded}" Value="True">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBlock.Style>
                                                            </TextBlock>
                                                            <TextBox Grid.Column="3" FontSize="14" Margin="5,0" Padding="2" Text="{Binding NewValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding IsModified, Converter={StaticResource hideIfFalse}}"/>
                                                            <Button Grid.Column="6" FontSize="12" Margin="5,0" Padding="2,0" Content="modify" Command="{Binding ModifyCommand}">
                                                                <Button.Style>
                                                                    <Style TargetType="Button">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsModified}" Value="True">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Button.Style>
                                                            </Button>
                                                            <Button Grid.Column="7" FontSize="12" Margin="5,0" Padding="2,0" Content="remove modification" Command="{Binding RemoveModificationCommand}">
                                                                <Button.Style>
                                                                    <Style TargetType="Button">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsModified}" Value="False">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding wasAdded}" Value="True">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Button.Style>
                                                            </Button>
                                                            <Button Grid.Column="8" FontSize="12" Margin="5,0" Padding="2,0" Content="delete" Visibility="{Binding wasAdded, Converter={StaticResource hideIfFalse}}" Command="{Binding DeleteCommand}"/>
                                                        </Grid>
                                                    </Grid>
                                                </Border>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </ScrollViewer>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
            <Grid Grid.Column="2">
                <Border Style="{DynamicResource panelBorder}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Style="{DynamicResource panelHeader}">constants</TextBlock>
                        <ScrollViewer Margin="0,10" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Name="constants_scroller">
                            <ItemsControl Name="Constants" BorderThickness="0" ItemsSource="{Binding constants}" HorizontalContentAlignment="Stretch">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border Style="{DynamicResource itemBorder}" Margin="5,0" MouseEnter="MouseEnterConstant" MouseLeave="MouseLeaveConstant">
                                            <Grid >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20"/>
                                                    <ColumnDefinition Width="40"/>
                                                    <ColumnDefinition Width="100"/>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" FontWeight="DemiBold" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource AddedColor}" Visibility="{Binding wasAdded, Converter={StaticResource hideIfFalse}}">+</TextBlock>
                                                <TextBlock Grid.Column="1" FontWeight="Light" VerticalAlignment="Center" HorizontalAlignment="Right" FontFamily="Courier New"><Run Text="{Binding constantIndex}" />:</TextBlock>
                                                <TextBlock Grid.Column="2" FontWeight="Light" VerticalAlignment="Center" HorizontalAlignment="Left" FontFamily="Courier New" Foreground="{DynamicResource TypeMarkerColor}" Text="{Binding originalType}">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding wasAdded}" Value="True">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <TextBlock Grid.Column="3" Margin="10,0" VerticalAlignment="Center" Text="{Binding originalValue}" FontFamily="Courier New">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsModified}" Value="True">
                                                                    <Setter Property="TextDecorations" Value="Strikethrough"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding wasAdded}" Value="True">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <TextBox Grid.Column="4" Margin="5,0" Padding="2" Text="{Binding NewValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding IsModified, Converter={StaticResource hideIfFalse}}"/>
                                                <TextBlock Grid.Column="5" FontWeight="Light" VerticalAlignment="Center" HorizontalAlignment="Left" FontFamily="Courier New" Foreground="#FF229C87" Visibility="{Binding IsModified, Converter={StaticResource hideIfFalse}}">[<Run Text="{Binding ComputedType, Mode=OneWay}"/>]</TextBlock>
                                                <Button Grid.Column="7" Margin="5,2" Padding="2,0" Content="modify" Command="{Binding ModifyCommand}">
                                                    <Button.Style>
                                                        <Style TargetType="Button">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsModified}" Value="True">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                                <Button Grid.Column="8" Margin="5,2" Padding="2,0" Content="remove modification" Command="{Binding RemoveModificationCommand}">
                                                    <Button.Style>
                                                        <Style TargetType="Button">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsModified}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding wasAdded}" Value="True">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                                <Button Grid.Column="9" Margin="5,2" Padding="2,0" Content="delete" Visibility="{Binding wasAdded, Converter={StaticResource hideIfFalse}}" Command="{Binding DeleteCommand}"/>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </ScrollViewer>
                        <Button Grid.Row="1" Margin="5" Padding="2" HorizontalAlignment="Right" Click="AddConstant_Click">add constant</Button>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
